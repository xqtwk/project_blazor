// <auto-generated />
using BlazorApp1.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221205033943_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp1.Shared.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CellNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClientSurname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ClientId");

                    b.ToTable("clientdetails", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Client");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.Property<int>("ParentsClientId")
                        .HasColumnType("int");

                    b.Property<int>("Teachers")
                        .HasColumnType("int");

                    b.HasKey("ParentsClientId", "Teachers");

                    b.HasIndex("Teachers");

                    b.ToTable("ParentStudent");
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.Property<int>("Teachers")
                        .HasColumnType("int");

                    b.Property<int>("TeachersClientId")
                        .HasColumnType("int");

                    b.HasKey("Teachers", "TeachersClientId");

                    b.HasIndex("TeachersClientId");

                    b.ToTable("StudentTeacher");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Parent", b =>
                {
                    b.HasBaseType("BlazorApp1.Shared.Models.Client");

                    b.HasDiscriminator().HasValue("Parent");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Student", b =>
                {
                    b.HasBaseType("BlazorApp1.Shared.Models.Client");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("BlazorApp1.Shared.Models.Teacher", b =>
                {
                    b.HasBaseType("BlazorApp1.Shared.Models.Client");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.Parent", null)
                        .WithMany()
                        .HasForeignKey("ParentsClientId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Shared.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("Teachers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("Teachers")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Shared.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
